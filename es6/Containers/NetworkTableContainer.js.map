{"version":3,"file":"NetworkTableContainer.js","sources":["../../src/Containers/NetworkTableContainer.tsx"],"sourcesContent":["// @ts-nocheck\nimport React from 'react';\nimport classNames from 'classnames/bind';\nimport PropTypes from 'prop-types';\n\nimport NetworkTableHeader from './../Components/NetworkTable/NetworkTableHeader';\nimport NetworkTableRow from './../Components/NetworkTable/NetworkTableRow';\nimport { useNetwork } from './../state/network/Context';\nimport ImportHar from './../Components/Import/ImportHAR';\nimport Styles from './NetworkTableContainer.styles.scss';\nimport ErrorMessage from './../Components/ErrorMessage';\nimport { useTheme } from '../state/theme/Context';\nimport InputHAR from '../Components/Import/InputHAR';\n\nconst context = classNames.bind(Styles);\n\nconst NetworkTableContainer = ({ onRequestSelect }) => {\n  const { state, actions } = useNetwork();\n  const { showImportHAR } = useTheme();\n  const actualData = state.get('actualData');\n  const data = state.get('data');\n  const totalNetworkTime = state.get('totalNetworkTime');\n  const error = state.get('error');\n  const selectedReqIndex = state.get('selectedReqIndex');\n  const showReqDetail = state.get('showReqDetail');\n  const containerClassName = context('table-container', {\n    'limited-cols': showReqDetail,\n  });\n  const handleReqSelect = (payload) => {\n    actions.updateScrollToIndex(payload.index);\n    actions.selectRequest(payload);\n    onRequestSelect(payload);\n  };\n\n  if (error) {\n    return (\n      <ErrorMessage {...error} />\n    );\n  }\n\n  if (!actualData.size) {\n    return (\n      <section className={Styles['table-container']}>\n        {showImportHAR && (\n          <>\n            <ImportHar showButton={false} />\n            <InputHAR />\n          </>\n        )}\n      </section>\n    );\n  }\n\n  return (\n    <section className={containerClassName}>\n      <table className={Styles.table}>\n        <NetworkTableHeader />\n        <tbody className={Styles['table-content']}>\n          {Array.from(data).map((rowInfo) => (\n            <NetworkTableRow\n              key={rowInfo.index}\n              maxTime={totalNetworkTime}\n              onSelect={handleReqSelect}\n              payload={rowInfo}\n              scrollHighlight={selectedReqIndex === rowInfo.index}\n            />\n          ))}\n        </tbody>\n      </table>\n    </section>\n  );\n};\n\nNetworkTableContainer.propTypes = {\n  onRequestSelect: PropTypes.func,\n};\n\nNetworkTableContainer.defaultProps = {\n  onRequestSelect: () => {},\n};\n\nexport default NetworkTableContainer;\n"],"names":["context","classNames","bind","Styles","NetworkTableContainer","onRequestSelect","useNetwork","state","actions","useTheme","showImportHAR","actualData","get","data","totalNetworkTime","error","selectedReqIndex","showReqDetail","containerClassName","handleReqSelect","payload","updateScrollToIndex","index","selectRequest","size","table","Array","from","map","rowInfo","propTypes","PropTypes","func","defaultProps"],"mappings":"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"}