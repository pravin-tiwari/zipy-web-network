{"version":3,"file":"Context.js","sources":["../../../src/state/theme/Context.tsx"],"sourcesContent":["import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { NETWORK_VIEWER_DEFAULT_OPTIONS } from '../../constants';\n\nexport const ThemeContext = React.createContext(NETWORK_VIEWER_DEFAULT_OPTIONS);\n\nexport const useTheme = () => {\n  const context = useContext(ThemeContext);\n  if (!context) {\n    throw new Error('useTheme must be used within a ThemeContext');\n  }\n\n  return context;\n};\n\nexport const ThemeProvider = (props) => {\n  const { options } = props;\n  const finalOptions = {\n    ...NETWORK_VIEWER_DEFAULT_OPTIONS,\n    ...options,\n  };\n\n  return (\n    <ThemeContext.Provider\n      value={finalOptions}\n      {...props}\n    />\n  );\n};\n\nThemeProvider.propTypes = {\n  options: PropTypes.object,\n};\n\nThemeProvider.defaultProps = {\n  options: NETWORK_VIEWER_DEFAULT_OPTIONS,\n};\n\nexport default ThemeProvider;\n"],"names":["ThemeContext","React","createContext","NETWORK_VIEWER_DEFAULT_OPTIONS","useTheme","context","useContext","Error","ThemeProvider","props","options","finalOptions","_objectSpread","propTypes","PropTypes","object","defaultProps"],"mappings":";;;;;AAKO,IAAMA,YAAY,gBAAGC,KAAK,CAACC,aAAN,CAAoBC,8BAApB,EAArB;AAEMC,IAAAA,QAAQ,GAAG,SAAXA,QAAW,GAAM;AAC5B,EAAA,IAAMC,OAAO,GAAGC,UAAU,CAACN,YAAD,CAA1B,CAAA;;EACA,IAAI,CAACK,OAAL,EAAc;AACZ,IAAA,MAAM,IAAIE,KAAJ,CAAU,6CAAV,CAAN,CAAA;AACD,GAAA;;AAED,EAAA,OAAOF,OAAP,CAAA;AACD,EAPM;IASMG,aAAa,GAAG,SAAhBA,aAAgB,CAACC,KAAD,EAAW;AACtC,EAAA,IAAQC,OAAR,GAAoBD,KAApB,CAAQC,OAAR,CAAA;;AACA,EAAA,IAAMC,YAAY,GAAAC,cAAA,CAAAA,cAAA,CAAA,EAAA,EACbT,8BADa,CAAA,EAEbO,OAFa,CAAlB,CAAA;;EAKA,oBACE,KAAA,CAAA,aAAA,CAAC,YAAD,CAAc,QAAd,EAAA,QAAA,CAAA;AACE,IAAA,KAAK,EAAEC,YAAAA;AADT,GAAA,EAEMF,KAFN,CADF,CAAA,CAAA;AAMD,EAbM;AAePD,aAAa,CAACK,SAAd,GAA0B;EACxBH,OAAO,EAAEI,SAAS,CAACC,MAAAA;AADK,CAA1B,CAAA;AAIAP,aAAa,CAACQ,YAAd,GAA6B;AAC3BN,EAAAA,OAAO,EAAEP,8BAAAA;AADkB,CAA7B;;;;"}