{"version":3,"file":"utils.js","sources":["../src/utils.ts"],"sourcesContent":["// @ts-nocheck\nimport { TIMINGS, TIMELINE_DATA_POINT_HEIGHT } from './constants';\n\n/* eslint no-underscore-dangle: 0 */\n\nexport const roundOff = (value, decimal = 1) => {\n  const base = 10 ** decimal;\n  return Math.round(value * base) / base;\n};\n\nexport const formatSize = (bytes) => {\n  if (bytes < 1024) {\n    return `${roundOff(bytes)} B`;\n  }\n  if (bytes < (1024 ** 2)) {\n    return `${roundOff(bytes / 1024)} KB`;\n  }\n  return `${roundOff(bytes / (1024 ** 2))} MB`;\n};\n\nexport const formatTime = (time) => {\n  if (time < 1000) {\n    return `${Math.round(time)}ms`;\n  }\n  if (time < 60000) {\n    return `${Math.ceil(time / 10) / 100}s`;\n  }\n  return `${(Math.ceil(time / 60000) * 100) / 100}m`;\n};\n\nexport const getUrlInfo = (url) => {\n  const urlInfo = new URL(url);\n  const pathSplit = urlInfo.pathname.split('/');\n  const fileName = (\n    pathSplit[pathSplit.length - 1].trim() ?\n      pathSplit[pathSplit.length - 1] : pathSplit[pathSplit.length - 2]\n  ) + urlInfo.search;\n\n  return {\n    domain: urlInfo.host,\n    filename: fileName || urlInfo.href,\n    url: urlInfo.href,\n  };\n};\n\nexport const parseSize = ({ bodySize, _transferSize, headers, content }) => {\n  if (content && content.size) {\n    return formatSize(content.size);\n  }\n  if (_transferSize > -1) {\n    return formatSize(_transferSize);\n  }\n  if (bodySize > -1) {\n    return formatSize(bodySize);\n  }\n  const contentInfo = headers.find(({ name }) => ['content-length', 'Content-Length'].includes(name));\n  if (!contentInfo) {\n    return 0;\n  }\n\n  return formatSize(contentInfo.value);\n};\n\nexport const getContentType = (entry) => {\n  if (entry._resourceType) {\n    return entry._resourceType.toLowerCase();\n  }\n\n  const { headers } = entry.response;\n  const contentInfo = headers.find(({ name }) => ['content-type', 'Content-Type'].includes(name));\n  if (!contentInfo) {\n    return '';\n  }\n  const type = contentInfo.value.split(';')[0].split('/');\n  return type.length > 1 ? type[1] : type[0];\n};\n\nexport const getTimings = ({ startedDateTime, timings }, firstEntryTime) => ({\n  ...timings,\n  startTime: new Date(startedDateTime).getTime() - new Date(firstEntryTime).getTime(),\n});\n\nexport const getContent = ({ mimeType, text }) => {\n  if (mimeType === 'application/json') {\n    let parsedJson = text;\n    try {\n      parsedJson = JSON.stringify(JSON.parse(text), null, 2);\n    } catch (err) {\n      parsedJson = text;\n    }\n    return parsedJson;\n  }\n\n  return text;\n};\n\nexport const getEntryTransferredSize = ({ response }) => {\n  const { bodySize, _transferSize } = response;\n  if (_transferSize > -1) {\n    return _transferSize;\n  }\n\n  if (bodySize > -1) {\n    return bodySize;\n  }\n  return -1;\n};\n\nexport const getEntryUncompressedSize = ({ response }) => {\n  const { bodySize, _transferSize, content: { size } } = response;\n  if (size > 0) {\n    return size;\n  }\n  if (_transferSize > -1) {\n    return _transferSize;\n  }\n  if (bodySize > -1) {\n    return bodySize;\n  }\n  return -1;\n};\n\nexport const calculateFinishTime = (data) => {\n  const finishTimes = data.map(({ timings }) => (\n    Object.values(timings).reduce((acc, durationInMS) => (\n      acc + (durationInMS > -1 ? durationInMS : 0)\n    ), 0)));\n  return Math.max(...finishTimes);\n};\n\nexport const sortHeaders = (current, next) => {\n  if (current.name < next.name) {\n    return -1;\n  }\n  return current.name > next.name ? 1 : 0;\n};\n\nexport const getHeaders = (entry) => ({\n  request: entry.request.headers.sort(sortHeaders),\n  response: entry.response.headers.sort(sortHeaders),\n  queryString: entry.request.queryString,\n  postData: entry.request.postData,\n});\n\nexport const getTotalTimeOfEntry = ({ startedDateTime, time, timings }) => (\n  new Date(startedDateTime).getTime() + time + (timings._blocked_queueing || 0)\n);\n\nexport const getInterceptError = ({ response }) => (\n  response && response._error ? response._error : null\n);\n\nexport const prepareViewerData = (entries) => {\n  if (!entries.length) {\n    return {\n      totalNetworkTime: 0,\n      data: [],\n      totalRequests: 0,\n      totalTransferredSize: 0,\n      totalUncompressedSize: 0,\n      finishTime: 0,\n    };\n  }\n\n  const firstEntryTime = entries[0].startedDateTime;\n  let endTime = getTotalTimeOfEntry(entries[entries.length - 1]);\n  let totalTransferredSize = 0;\n  let totalUncompressedSize = 0;\n  const data = entries\n    .filter((entry) => entry.response && getUrlInfo(entry.request.url).domain)\n    .map((entry, index) => {\n      totalTransferredSize += getEntryTransferredSize(entry);\n      totalUncompressedSize += getEntryUncompressedSize(entry);\n      const lastTimeOfEntry = getTotalTimeOfEntry(entry);\n      endTime = endTime < lastTimeOfEntry ? lastTimeOfEntry : endTime;\n      return {\n        index,\n        status: entry.response.status,\n        method: entry.request.method,\n        size: parseSize(entry.response),\n        startedDateTime: new Date(entry.startedDateTime).getTime(),\n        type: getContentType(entry),\n        timings: getTimings(entry, firstEntryTime),\n        body: getContent(entry.response.content),\n        time: entry.time,\n        serverIPAddress: entry.serverIPAddress || ':80',\n        headers: getHeaders(entry),\n        transferredSize: getEntryTransferredSize(entry),\n        uncompressedSize: getEntryUncompressedSize(entry),\n        error: getInterceptError(entry),\n        ...getUrlInfo(entry.request.url),\n      };\n    });\n\n  const totalRequests = data.length;\n  const totalNetworkTime = endTime - new Date(firstEntryTime).getTime();\n  const finishTime = calculateFinishTime(data);\n  return {\n    totalNetworkTime,\n    data,\n    totalRequests,\n    totalTransferredSize,\n    totalUncompressedSize,\n    finishTime,\n  };\n};\n\nexport const sortBy = (data, key, isAsc = true) => data.sort((prev, next) => {\n  if (prev[key] < next[key]) {\n    return isAsc ? -1 : 1;\n  }\n  if (prev[key] > next[key]) {\n    return isAsc ? 1 : 1;\n  }\n  return 0;\n});\n\nexport const filterCondition = ({ filter, info }) => {\n  switch (filter.name) {\n    case 'error':\n      return info.status >= 400 || info.error;\n    case 'type':\n    default:\n      return filter.value.includes(info[filter.name]);\n  }\n};\n\nexport const filterData = ({\n  data,\n  errorFilter,\n  filter = {},\n  search = {},\n}) => {\n  const trimmedSearch = search.value && search.value.trim();\n\n  return !trimmedSearch && !filter.name && !errorFilter ?\n    data :\n    data.filter((info) => {\n      const isSearchMatched = trimmedSearch ?\n        info[search.name] && info[search.name].includes(trimmedSearch) : true;\n      const isErrorMatched = errorFilter ? filterCondition({ filter: { name: 'error' }, info }) : true;\n      const isFilterMatched = filter.name ? filterCondition({ filter, info }) : true;\n      return isSearchMatched && isErrorMatched && isFilterMatched;\n    });\n};\n\nexport const actionsWrapper = (actions = {}) => (dispatch, state) => Object.keys(actions)\n  .reduce((modifiedActions, type) => ({\n    ...modifiedActions,\n    [type]: actions[type](dispatch, state),\n  }), {});\n\nexport const parseTime = (time) => {\n  if (!time) {\n    return time;\n  }\n\n  if (time > 1000) {\n    return `${(time / 1000).toFixed(2)} s`;\n  }\n\n  return `${time.toFixed(2)} ms`;\n};\n\nexport const calcTotalTime = (data) => {\n  const total = Object.keys(data)\n    .filter((key) => !['_blocked_queueing', 'startTime'].includes(key))\n    .reduce((acc, key) => acc + data[key], 0);\n  return total;\n};\n\nexport const prepareTooltipData = (data) => ({\n  queuedAt: parseTime(data.startTime),\n  startedAt: parseTime(data.startTime + data._blocked_queueing),\n  totalTime: parseTime(calcTotalTime(data)),\n  ...(Object.keys(data).reduce((acc, key) => {\n    acc[key] = parseTime(data[key]);\n    return acc;\n  }, {})\n  ),\n});\n\nexport const getStatusClass = ({ status, error }) => {\n  if (status === 0 && !error) {\n    return 'pending';\n  }\n  if (status >= 400 || error) {\n    return 'error';\n  }\n  return 'info';\n};\n\nexport const formatValue = (key, value, unit, request = {}) => {\n  switch (key) {\n    case 'time':\n      return value === 0 && !request.error ? 'Pending' : parseTime(value);\n    case 'status':\n      if (request.error) {\n        return '(failed)';\n      }\n      return value === 0 ? 'Pending' : value;\n    default:\n      return !unit ? value : `${value} ${unit}`;\n  }\n};\n\nexport const calcChartAttributes = (data, maxTime, cx, index, cy = null) => {\n  const startTimePercent = (data.startTime / maxTime) * 100;\n  let previousX = 0;\n  let previousWidth = 0;\n  const chartAttributes = [];\n\n  Object.keys(TIMINGS).forEach((key) => {\n    const timingInfo = TIMINGS[key];\n    const value = data[timingInfo.dataKey];\n    if (value <= 0) {\n      return;\n    }\n\n    previousX += !previousWidth ? startTimePercent : previousWidth;\n    previousWidth = value > 0 ? (value / maxTime) * 100 : 0;\n\n    chartAttributes.push({\n      width: `${previousWidth}%`,\n      y: index ? ((index % 10) * (TIMELINE_DATA_POINT_HEIGHT + 1)) + 40 : cy,\n      x: `${previousX}%`,\n      fill: timingInfo.fill,\n      key,\n    });\n  });\n\n  return chartAttributes;\n};\n\nexport const findIndexNearTimestamp = (data, exactTimestamp) => (\n  data.reduce((\n    { value, index }, { startedDateTime: currentValue, index: currentIndex }) => (\n    Math.abs(currentValue - exactTimestamp) < Math.abs(value - exactTimestamp) ?\n      { value: currentValue, index: currentIndex } : { value, index }\n  ), { value: 0, index: 0 }).index\n);\n\nexport const findIndexBeforeTimestamp = (data, exactTimestamp) => {\n  const resultIndex = data.reverse()\n    .findIndex(({ startedDateTime }) => startedDateTime <= exactTimestamp);\n  return resultIndex < 0 ? 0 : data.size - (resultIndex + 1);\n};\n\nexport const findIndexAfterTimestamp = (data, exactTimestamp) => (\n  data.findIndex(({ startedDateTime }) => startedDateTime >= exactTimestamp)\n);\n\nexport const findRequestIndex = ({ data, timestamp, position }) => {\n  switch (position) {\n    case 'before':\n      return findIndexBeforeTimestamp(data, timestamp);\n    case 'after':\n      return findIndexAfterTimestamp(data, timestamp);\n    case 'near':\n    default:\n      return findIndexNearTimestamp(data, timestamp);\n  }\n};\n\nexport const calculateTimings = (pages) => (\n  pages.reduce(({ DOMContentLoaded, onLoad }, { pageTimings }) => ({\n    DOMContentLoaded: DOMContentLoaded + pageTimings.onContentLoad,\n    onLoad: onLoad + pageTimings.onLoad,\n  }), { DOMContentLoaded: 0, onLoad: 0 }));\n\nexport const getSummary = (data) => (\n  data.reduce((acc, req) => {\n    acc.totalTransferredSize += req.transferredSize;\n    acc.totalUncompressedSize += req.uncompressedSize;\n    return acc;\n  }, {\n    totalTransferredSize: 0,\n    totalUncompressedSize: 0,\n    totalRequests: data.size,\n  })\n);\n\nexport const parseRequestPayload = (text) => {\n  let parsedJson = text;\n  try {\n    parsedJson = JSON.stringify(JSON.parse(text), null, 2);\n  } catch (err) {\n    parsedJson = text;\n  }\n  return parsedJson;\n};\n"],"names":["roundOff","value","decimal","base","Math","round","formatSize","bytes","formatTime","time","ceil","getUrlInfo","url","urlInfo","URL","pathSplit","pathname","split","fileName","length","trim","search","domain","host","filename","href","parseSize","bodySize","_transferSize","headers","content","size","contentInfo","find","name","includes","getContentType","entry","_resourceType","toLowerCase","response","type","getTimings","firstEntryTime","startedDateTime","timings","_objectSpread","startTime","Date","getTime","getContent","mimeType","text","parsedJson","JSON","stringify","parse","err","getEntryTransferredSize","getEntryUncompressedSize","calculateFinishTime","data","finishTimes","map","Object","values","reduce","acc","durationInMS","max","sortHeaders","current","next","getHeaders","request","sort","queryString","postData","getTotalTimeOfEntry","_blocked_queueing","getInterceptError","_error","prepareViewerData","entries","totalNetworkTime","totalRequests","totalTransferredSize","totalUncompressedSize","finishTime","endTime","filter","index","lastTimeOfEntry","status","method","body","serverIPAddress","transferredSize","uncompressedSize","error","sortBy","key","isAsc","prev","filterCondition","info","filterData","errorFilter","trimmedSearch","isSearchMatched","isErrorMatched","isFilterMatched","actionsWrapper","actions","dispatch","state","keys","modifiedActions","parseTime","toFixed","calcTotalTime","total","prepareTooltipData","queuedAt","startedAt","totalTime","getStatusClass","formatValue","unit","calcChartAttributes","maxTime","cx","cy","startTimePercent","previousX","previousWidth","chartAttributes","TIMINGS","forEach","timingInfo","dataKey","push","width","y","TIMELINE_DATA_POINT_HEIGHT","x","fill","findIndexNearTimestamp","exactTimestamp","currentValue","currentIndex","abs","findIndexBeforeTimestamp","resultIndex","reverse","findIndex","findIndexAfterTimestamp","findRequestIndex","timestamp","position","calculateTimings","pages","DOMContentLoaded","onLoad","pageTimings","onContentLoad","getSummary","req","parseRequestPayload"],"mappings":"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"}